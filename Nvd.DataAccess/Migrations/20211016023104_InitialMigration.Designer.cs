// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nvd.DataAccess;

namespace Nvd.DataAccess.Migrations
{
    [DbContext(typeof(NvdDataContext))]
    [Migration("20211016023104_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nvd.DataAccess.Objects.Basemetricv2", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("acInsufInfo")
                        .HasColumnType("bit");

                    b.Property<int?>("cvssV2ID")
                        .HasColumnType("int");

                    b.Property<float>("exploitabilityScore")
                        .HasColumnType("real");

                    b.Property<float>("impactScore")
                        .HasColumnType("real");

                    b.Property<bool>("obtainAllPrivilege")
                        .HasColumnType("bit");

                    b.Property<bool>("obtainOtherPrivilege")
                        .HasColumnType("bit");

                    b.Property<bool>("obtainUserPrivilege")
                        .HasColumnType("bit");

                    b.Property<string>("severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("userInteractionRequired")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("cvssV2ID");

                    b.ToTable("BaseMetricsV2");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Basemetricv3", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cvssV3ID")
                        .HasColumnType("int");

                    b.Property<float>("exploitabilityScore")
                        .HasColumnType("real");

                    b.Property<float>("impactScore")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("cvssV3ID");

                    b.ToTable("BaseMetricsV3");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.CVE_Data_Meta", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ASSIGNER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("CVE_Data_Metas");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.CVE_Items", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ResultID")
                        .HasColumnType("int");

                    b.Property<int?>("configurationsID")
                        .HasColumnType("int");

                    b.Property<int?>("cveID")
                        .HasColumnType("int");

                    b.Property<int?>("impactID")
                        .HasColumnType("int");

                    b.Property<string>("lastModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publishedDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ResultID");

                    b.HasIndex("configurationsID");

                    b.HasIndex("cveID");

                    b.HasIndex("impactID");

                    b.ToTable("CVE_Items");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Configurations", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVE_data_version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Cpe_Match", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NodeID")
                        .HasColumnType("int");

                    b.Property<string>("cpe23Uri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("versionEndIncluding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("versionStartIncluding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("vulnerable")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("NodeID");

                    b.ToTable("Cpe_Matches");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Cve", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CVE_data_metaPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("data_format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("descriptionID")
                        .HasColumnType("int");

                    b.Property<int?>("problemtypeID")
                        .HasColumnType("int");

                    b.Property<int?>("referencesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CVE_data_metaPrimaryKey");

                    b.HasIndex("descriptionID");

                    b.HasIndex("problemtypeID");

                    b.HasIndex("referencesID");

                    b.ToTable("Cves");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Cvssv2", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accessComplexity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accessVector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authentication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("availabilityImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("baseScore")
                        .HasColumnType("real");

                    b.Property<string>("confidentialityImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("integrityImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vectorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cvssv2s");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Cvssv3", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("attackComplexity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("attackVector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("availabilityImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("baseScore")
                        .HasColumnType("real");

                    b.Property<string>("baseSeverity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("confidentialityImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("integrityImpact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("privilegesRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userInteraction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vectorString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cvssv3s");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Description", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Problemtype_DataID")
                        .HasColumnType("int");

                    b.Property<string>("lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Problemtype_DataID");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Description1", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("Description1");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Description_Data", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Description1ID")
                        .HasColumnType("int");

                    b.Property<string>("lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Description1ID");

                    b.ToTable("Description_Data");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Impact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("baseMetricV2ID")
                        .HasColumnType("int");

                    b.Property<int?>("baseMetricV3ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("baseMetricV2ID");

                    b.HasIndex("baseMetricV3ID");

                    b.ToTable("Impacts");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Node", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConfigurationsID")
                        .HasColumnType("int");

                    b.Property<string>("_operator")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ConfigurationsID");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.NvdSearchResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("resultID")
                        .HasColumnType("int");

                    b.Property<int>("resultsPerPage")
                        .HasColumnType("int");

                    b.Property<int>("startIndex")
                        .HasColumnType("int");

                    b.Property<int>("totalResults")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("resultID");

                    b.ToTable("NvdSearchResults");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Problemtype", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("ProblemTypes");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Problemtype_Data", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProblemtypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProblemtypeID");

                    b.ToTable("Problemtype_Data");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.RawDownload", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("resultsPerPage")
                        .HasColumnType("int");

                    b.Property<int>("startIndex")
                        .HasColumnType("int");

                    b.Property<int>("totalResults")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("RawDownloads");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Reference_Data", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ReferencesID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refsource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ReferencesID");

                    b.ToTable("Reference_Data");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.References", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("References");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Result", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVE_data_format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVE_data_timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVE_data_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVE_data_version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Basemetricv2", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Cvssv2", "cvssV2")
                        .WithMany()
                        .HasForeignKey("cvssV2ID");

                    b.Navigation("cvssV2");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Basemetricv3", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Cvssv3", "cvssV3")
                        .WithMany()
                        .HasForeignKey("cvssV3ID");

                    b.Navigation("cvssV3");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.CVE_Items", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Result", null)
                        .WithMany("CVE_Items")
                        .HasForeignKey("ResultID");

                    b.HasOne("Nvd.DataAccess.Objects.Configurations", "configurations")
                        .WithMany()
                        .HasForeignKey("configurationsID");

                    b.HasOne("Nvd.DataAccess.Objects.Cve", "cve")
                        .WithMany()
                        .HasForeignKey("cveID");

                    b.HasOne("Nvd.DataAccess.Objects.Impact", "impact")
                        .WithMany()
                        .HasForeignKey("impactID");

                    b.Navigation("configurations");

                    b.Navigation("cve");

                    b.Navigation("impact");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Cpe_Match", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Node", null)
                        .WithMany("cpe_match")
                        .HasForeignKey("NodeID");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Cve", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.CVE_Data_Meta", "CVE_data_meta")
                        .WithMany()
                        .HasForeignKey("CVE_data_metaPrimaryKey");

                    b.HasOne("Nvd.DataAccess.Objects.Description1", "description")
                        .WithMany()
                        .HasForeignKey("descriptionID");

                    b.HasOne("Nvd.DataAccess.Objects.Problemtype", "problemtype")
                        .WithMany()
                        .HasForeignKey("problemtypeID");

                    b.HasOne("Nvd.DataAccess.Objects.References", "references")
                        .WithMany()
                        .HasForeignKey("referencesID");

                    b.Navigation("CVE_data_meta");

                    b.Navigation("description");

                    b.Navigation("problemtype");

                    b.Navigation("references");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Description", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Problemtype_Data", null)
                        .WithMany("description")
                        .HasForeignKey("Problemtype_DataID");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Description_Data", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Description1", null)
                        .WithMany("description_data")
                        .HasForeignKey("Description1ID");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Impact", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Basemetricv2", "baseMetricV2")
                        .WithMany()
                        .HasForeignKey("baseMetricV2ID");

                    b.HasOne("Nvd.DataAccess.Objects.Basemetricv3", "baseMetricV3")
                        .WithMany()
                        .HasForeignKey("baseMetricV3ID");

                    b.Navigation("baseMetricV2");

                    b.Navigation("baseMetricV3");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Node", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Configurations", null)
                        .WithMany("nodes")
                        .HasForeignKey("ConfigurationsID");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.NvdSearchResult", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultID");

                    b.Navigation("result");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Problemtype_Data", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.Problemtype", null)
                        .WithMany("problemtype_data")
                        .HasForeignKey("ProblemtypeID");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Reference_Data", b =>
                {
                    b.HasOne("Nvd.DataAccess.Objects.References", null)
                        .WithMany("reference_data")
                        .HasForeignKey("ReferencesID");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Configurations", b =>
                {
                    b.Navigation("nodes");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Description1", b =>
                {
                    b.Navigation("description_data");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Node", b =>
                {
                    b.Navigation("cpe_match");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Problemtype", b =>
                {
                    b.Navigation("problemtype_data");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Problemtype_Data", b =>
                {
                    b.Navigation("description");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.References", b =>
                {
                    b.Navigation("reference_data");
                });

            modelBuilder.Entity("Nvd.DataAccess.Objects.Result", b =>
                {
                    b.Navigation("CVE_Items");
                });
#pragma warning restore 612, 618
        }
    }
}
